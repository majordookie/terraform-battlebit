<powershell>
# Ensure the script is being run with proper privileges
$isAdmin = ([Security.Principal.WindowsPrincipal][Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)
if (-not $isAdmin) {
    throw "This script must be run as an administrator!"
}

# Install Chocolatey
Set-ExecutionPolicy Bypass -Scope Process -Force;
[System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072;

iex ((new-object net.webclient).DownloadString('https://chocolatey.org/install.ps1'))

# Updated profile content to explicitly import Choco
$ChocoProfileValue = @'
$ChocolateyProfile = "$env:ChocolateyInstall\helpers\chocolateyProfile.psm1"
if (Test-Path($ChocolateyProfile)) {
  Import-Module "$ChocolateyProfile"
}
'@

# Write it to the $profile location
Set-Content -Path "$profile" -Value $ChocoProfileValue -Force

# Source it
. $profile

# Install Git using Chocolatey
choco install git -y

# Refresh environment
Import-Module $env:ChocolateyInstall\helpers\chocolateyProfile.psm1
refreshenv

# Install python3 using Chocolatey 
choco install python3 -y

# Refresh environment
Import-Module $env:ChocolateyInstall\helpers\chocolateyProfile.psm1
refreshenv

# Add pip to Path
[Environment]::SetEnvironmentVariable("Path", "$env:Path;C:\tools\python\Scripts\", "User")

# Set alias for python
mklink "C:\path\to\symlink\python3.exe" "C:\ProgramData\chocolatey\bin\python3.11.exe"

# Define the GitHub API endpoint for the latest release
$apiUrl = "https://api.github.com/repos/BattleBit-Community-Servers/Battlebit-Community-Server-Launcher/releases/latest"

# Fetch details of the latest release using Invoke-RestMethod
$releaseInfo = Invoke-RestMethod -Uri $apiUrl

# Get the download URL for the first asset
$downloadUrl = $releaseInfo.assets[0].browser_download_url

# Use Invoke-WebRequest to download the asset
Invoke-WebRequest -Uri $downloadUrl -OutFile ".\$($releaseInfo.assets[0].name)"

Write-Output "Downloaded $($releaseInfo.assets[0].name)!"

# Create Environment Variables
# NOTE: Replace the placeholder values with your own details.
[System.Environment]::SetEnvironmentVariable("SERVER", "C:\Battlebit-Community-Server-Launcher", "Machine")
[System.Environment]::SetEnvironmentVariable("USERNAME", "YourSteamUsername", "Machine")
[System.Environment]::SetEnvironmentVariable("PASSWORD", "YourSteamPassword", "Machine")
[System.Environment]::SetEnvironmentVariable("APPID", "671860", "Machine")
[System.Environment]::SetEnvironmentVariable("BETAPASSWORD", "YourBetaBranchPassword", "Machine")

# Restore the execution policy
Set-ExecutionPolicy Default
</powershell>